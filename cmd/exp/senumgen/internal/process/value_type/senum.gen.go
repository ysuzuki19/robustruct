// Code generated by variant; DO NOT EDIT.
package value_type

import "fmt"

type ValueType int

const (
	zero   ValueType = 0 // zero value catcher
	String ValueType = iota
	Int    ValueType = iota
)

func Values() []string {
	return []string{"string", "int"}
}
func (ValueType) Values() []string {
	return []string{"string", "int"}
}

func Default() ValueType    { return Int }
func NewDefault() ValueType { return Int }
func NewString() ValueType  { return String }
func NewInt() ValueType     { return Int }

func (e ValueType) IsString() bool { return e == String }
func (e ValueType) IsInt() bool    { return e == Int || e == zero }

func (e ValueType) String() string {
	switch e {
	case String:
		return "string"
	case Int:
		return "int"
	default:
		return "int"
	}
}

func FromString(s string) (ValueType, error) {
	switch s {
	case "string":
		return String, nil
	case "int":
		return Int, nil
	default:
		return zero, fmt.Errorf("invalid ValueType: %s", s)
	}
}
